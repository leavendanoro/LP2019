//Definición de la gramática 

/* 			Producciones     				Acciones semánticas asociadas */
			
			//Produccion base
line    	: assignment ';'				{;}
			| exit_command ';'				{exit(EXIT_SUCCESS);} //Termina el compilador
			
			| print exp ';'					{	if($2==1){printf("True\n");}   // Imprime el valor de una variable
								 				else if($2==0){printf("False\n");}
								 				else if($2==-1){printf("Undeclared\n");};
											}

			| line assignment ';'			{;}
			// Imprime el valor de las expresiones 
			| line print exp ';'			{	if($3==1){printf("True\n");} 
								 				else if($3==0){printf("False\n");}
								 				else if($3==-1){printf("Undeclared\n");};
											}

			| line exit_command ';'			{exit(EXIT_SUCCESS);}
			;

assignment 	: identifier ':' exp  			{updateSymbolVal($1,$3);} // Asigna un valor a una variable
			;

exp    		: term                  		{$$ = $1;} //Realiza las operaciones necesarias para encontrar el valor de verdad de una expresión
			| OPAR exp CLPAR				{$$ = $2;}
			| OPSQ exp CLSQ					{$$ = $2;}
			| ari '>' ari         			{if ($1 > $3) {$$ = 1; } else {$$ = 0;}}
			| ari GOE ari   				{if ($1 >= $3) {$$ = 1; } else {$$ = 0;}}
			| ari '<' ari           		{if ($1 < $3) {$$ = 1; } else {$$ = 0;}}
			| ari LOE ari     				{if ($1 <= $3) {$$ = 1; } else {$$ = 0;}}
			| ari EQ ari    				{if ($1 == $3) {$$ = 1; } else {$$ = 0;}}
			| ari DF ari      				{if ($1 != $3) {$$ = 1; } else {$$ = 0;}}
			| exp XNOR exp          		{if ($1 == $3) {$$ = 1; } else {$$ = 0;}}
			| exp IMPLY exp         		{if ($1 == 1 && $3 == 0) {$$ = 0; } else {$$ = 1;}}
			| exp XOR exp           		{if ($1 != $3) {$$ = 1; } else {$$ = 0;}}
			| exp AND exp           		{if ($1 == 1 && $3 == 1) {$$ = 1; } else {$$ = 0;}}
			| exp OR exp           			{if ($1 == 1 || $3 == 1) {$$ = 1; } else {$$ = 0;}}
			| NOT exp           			{$$ = !$2;}
			;

ari			: number						{$$ = $1;} //Realiza operaciones sobre números
			| ari '+' ari          			{$$ = $1 + $3;}
			| ari '-' ari         			{$$ = $1 - $3;}
			| ari '*' ari          			{$$ = $1 * $3;}
			| ari '/' ari         			{$$ = $1 / $3;}
			| OPAR ari CLPAR				{$$ = $2;}
			| OPSQ ari CLSQ					{$$ = $2;}

term   		: T               				{$$ = 1;} 
			| F								{$$ = 0;}
			| identifier					{$$ = symbolVal($1);} 
        	;